name: CI

on:
  schedule:
    - cron: '10 14 * * 0'
  push:
    branches: 
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Installed prerequisite packages
      run: |
        sudo apt update -q
        sudo apt install -y -q curl wget xz-utils sudo pv coreutils
    - name: Setup environment and download files
      run: |
        source ./env.sh
        mkdir rootfs
        wget ${GTOO_URL}
        sudo tar -xf ${TAR} -C rootfs
        sudo cp -f wsl.conf rootfs/etc
        sudo cp -f resolv.conf rootfs/etc
        sudo cp -f make.conf rootfs/etc/portage
        sudo cp -f cpu.sh rootfs
    - name: Mount directories and chroot
      run: |
        cd rootfs
        sudo mount -t proc /proc proc
        sudo mount --bind /sys sys
        sudo mount --make-rslave sys
        sudo mount --rbind /dev dev
        sudo mount --rbind /dev dev
        sudo chroot . sh cpu.sh
        sudo chroot . mkdir --parents etc/portage/repos.conf
        sudo chroot . cp usr/share/portage/config/repos.conf etc/portage/repos.conf/gentoo.conf
        sudo chroot . emerge-webrsync
    - name: GCC
      run: |
        cd rootfs
        sudo chroot . env-update
        sudo chroot . emerge -a n sys-devel/gcc
    - name: More chroot stuff
      run: |
        cd rootfs
        sudo chroot . emerge --update --deep --with-bdeps=y --newuse @world
        sudo chroot . emerge --oneshot -a n app-portage/mirrorselect
        sudo chmod -R a+rw etc
        sudo echo 'ACCEPT_LICENSE="-* @FREE linux-fw-redistributable no-source-code"' >> etc/portage/make.conf
        sudo chroot . emerge --oneshot --usepkg=n -a n sys-devel/libtool
    - name: Update @world set
      run: |
        cd rootfs
        sudo chroot . emerge --verbose --update --deep --newuse -a n @world
        sudo mkdir etc/portage/profile
        sudo chmod -R a+rw etc
        sudo echo "sys-apps/portage -ipc" > etc/portage/profile/package.use.force
    - name: Sudo n stuff
      run: |
        cd rootfs
        sudo chroot . emerge -a n app-admin/sudo
        sudo chmod -R a+rw etc
        sudo cp etc/sudoers ../sudoers
        sudo chmod a+rw ../sudoers
        sudo sed -i -e 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/g' ../sudoers
        cat ../sudoers
        sudo visudo -cf ../sudoers
        sudo cp ../sudoers etc/sudoers
        sudo chroot . emerge -a n app-shells/bash-completion
        sudo chroot . echo 'en_US.UTF-8 UTF-8' >> etc/locale.gen
        sudo chroot . locale-gen
        sudo chmod -R a+rw etc
        sudo chroot . echo 'LANG="en_US.UTF-8"' >> etc/env.d/02locale
        sudo chroot . echo 'LC_COLLATE="C"' >> etc/env.d/02locale
        sudo cp -f ../resolv.conf etc/
        sudo chroot . chmod 755 -R etc/sudoers
        sudo chroot . chmod 755 -R etc/sudoers.d
        sudo chroot . emerge -a n app-portage/layman
        sudo chroot . sed -i '/^#/!s/check_official .*/check_official : No/' /etc/layman/layman.cfg
        sudo chroot . layman -o https://raw.githubusercontent.com/ThatWeirdAndrew/gentoowsl-overlay/master/repositories.xml -f -a gentoowsl
        sudo chroot . layman-updater -R 
        sudo chroot . emerge -a n sys-apps/wslu
    - name: Network things
      run: |
        cd rootfs
        sudo chroot . emerge -a n net-misc/netifrc
        sudo chroot . echo 'config_eth0="dhcp"' >> etc/conf.d/net
        sudo chroot . emerge -a n net-misc/dhcpcd
        sudo chroot . emerge -a n net-misc/iputils
        sudo rm -rf var/cache/distfiles/*
        sudo chroot . chmod -R +x /usr
        sudo chmod -R +x usr
    - name: Unmount and compress archive
      run: |
        cd rootfs
        sudo umount ./{sys,proc}
        sudo tar cf - * -P | pv -s $(sudo du -sb ./ | awk '{print $1}') | sudo gzip > ../install.tar.gz
        sudo chown `id -un` ../install.tar.gz
        sudo mkdir targz
        sudo mv ../install.tar.gz targz
    - name: Set variable
      run: echo "::set-env name=version::$(date +%y%m%d)"
      shell: bash
    - name: Publish release
      if: github.event == 'schedule'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "rootfs/targz/install.tar.gz"
        tag: "${{env.version}}"
        token: ${{ secrets.TOKEN }}
        commit: master
