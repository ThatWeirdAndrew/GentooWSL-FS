 version: 2
 jobs:
   build:
     docker:
       - image: ubuntu:latest
     steps:
        - checkout
        - run:
            name: Installed prerequisite packages
            command: |
                sudo apt update -q
                sudo apt install -y -q curl wget xz-utils sudo
        - run:
            name: Setup environment and download files
            command: |
                source ./env.sh
                mkdir rootfs
                wget ${GTOO_URL}
                sudo tar -xf ${TAR} -C rootfs
                sudo cp -f wsl.conf rootfs/etc
                sudo cp -f resolv.conf rootfs/etc
                sudo cp -f make.conf rootfs/etc/portage
                sudo cp -f cpu.sh rootfs
        - run:
            name: Mount directories and chroot
            command: |
                cd rootfs
                sudo mount -t proc proc proc/
                sudo mount --bind /sys sys
                sudo chroot . sh cpu.sh
                sudo chroot . mkdir --parents etc/portage/repos.conf
                sudo chroot . cp usr/share/portage/config/repos.conf etc/portage/repos.conf/gentoo.conf
                sudo chroot . emerge-webrsync
                sudo chroot . emerge --oneshot -a n sys-devel/gcc
        - run:
            name: More chroot stuff
            command: |
                cd rootfs 
                sudo chroot . emerge --oneshot -a n app-portage/mirrorselect
                sudo chroot . mirrorselect -s3 -o >> etc/portage/repos.conf/gentoo.conf
                sudo chroot . emerge --oneshot --usepkg=n -a n sys-devel/libtool
                sudo chroot . emerge --verbose --update --deep --newuse -a n @world
                sudo mkdir etc/portage/profile
                sudo echo "sys-apps/portage -ipc" > etc/portage/profile/package.use.force
                sudo echo 'ACCEPT_LICENSE="-* @FREE linux-fw-redistributable no-source-code"' >> etc/portage/make.conf
                sudo chroot . emerge -a n sys-kernel/gentoo-sources
        - run:
            name: Genkernel and friends
            command: |
                cd rootfs
                sudo chroot . emerge -a n sys-kernel/genkernel
                sudo chroot . genkernel all
                sudo chroot . emerge -a n sys-kernel/linux-firmware
                sudo chroot . emerge -a n media-sound/pulseaudio::wsl
        - run:
            name: Unmount and compress archive
            command: |
                cd rootfs
                sudo umount ./{sys,proc}
                sudo tar -zcpf ../install.tar.gz *
                sudo chown `id -un` ../install.tar.gz
                sudo mkdir targz
                sudo mv ../install.tar.gz targz
                cd ..
        - persist_to_workspace:
            root: rootfs
            paths:
              - targz
   publish-github-release:
     docker:
       - image: cibuilds/github:0.10
     requires:
       - build
     steps:
       - attach_workspace:
           at: ./artifacts
       - run:
           name: "Publish Release on GitHub"
           command: |
             VERSION=$(my-binary --version)
             ghr -t ${GIT_TOKEN} -u ThatWeirdAndrew -r GentooWSL-FS -delete ${VERSION} ./artifacts/

       
